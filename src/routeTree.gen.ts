/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as LoggedInImport } from './routes/_logged-in'
import { Route as IndexImport } from './routes/index'
import { Route as LoggedInRequestAnInviteImport } from './routes/_logged-in/request-an-invite'
import { Route as LoggedInAppImport } from './routes/_logged-in/app'
import { Route as LoggedInAppIndexImport } from './routes/_logged-in/app/index'
import { Route as LoggedInAppAboutImport } from './routes/_logged-in/app/about'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const LoggedInRoute = LoggedInImport.update({
  id: '/_logged-in',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const LoggedInRequestAnInviteRoute = LoggedInRequestAnInviteImport.update({
  id: '/request-an-invite',
  path: '/request-an-invite',
  getParentRoute: () => LoggedInRoute,
} as any)

const LoggedInAppRoute = LoggedInAppImport.update({
  id: '/app',
  path: '/app',
  getParentRoute: () => LoggedInRoute,
} as any)

const LoggedInAppIndexRoute = LoggedInAppIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LoggedInAppRoute,
} as any)

const LoggedInAppAboutRoute = LoggedInAppAboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => LoggedInAppRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_logged-in': {
      id: '/_logged-in'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LoggedInImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/_logged-in/app': {
      id: '/_logged-in/app'
      path: '/app'
      fullPath: '/app'
      preLoaderRoute: typeof LoggedInAppImport
      parentRoute: typeof LoggedInImport
    }
    '/_logged-in/request-an-invite': {
      id: '/_logged-in/request-an-invite'
      path: '/request-an-invite'
      fullPath: '/request-an-invite'
      preLoaderRoute: typeof LoggedInRequestAnInviteImport
      parentRoute: typeof LoggedInImport
    }
    '/_logged-in/app/about': {
      id: '/_logged-in/app/about'
      path: '/about'
      fullPath: '/app/about'
      preLoaderRoute: typeof LoggedInAppAboutImport
      parentRoute: typeof LoggedInAppImport
    }
    '/_logged-in/app/': {
      id: '/_logged-in/app/'
      path: '/'
      fullPath: '/app/'
      preLoaderRoute: typeof LoggedInAppIndexImport
      parentRoute: typeof LoggedInAppImport
    }
  }
}

// Create and export the route tree

interface LoggedInAppRouteChildren {
  LoggedInAppAboutRoute: typeof LoggedInAppAboutRoute
  LoggedInAppIndexRoute: typeof LoggedInAppIndexRoute
}

const LoggedInAppRouteChildren: LoggedInAppRouteChildren = {
  LoggedInAppAboutRoute: LoggedInAppAboutRoute,
  LoggedInAppIndexRoute: LoggedInAppIndexRoute,
}

const LoggedInAppRouteWithChildren = LoggedInAppRoute._addFileChildren(
  LoggedInAppRouteChildren,
)

interface LoggedInRouteChildren {
  LoggedInAppRoute: typeof LoggedInAppRouteWithChildren
  LoggedInRequestAnInviteRoute: typeof LoggedInRequestAnInviteRoute
}

const LoggedInRouteChildren: LoggedInRouteChildren = {
  LoggedInAppRoute: LoggedInAppRouteWithChildren,
  LoggedInRequestAnInviteRoute: LoggedInRequestAnInviteRoute,
}

const LoggedInRouteWithChildren = LoggedInRoute._addFileChildren(
  LoggedInRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof LoggedInRouteWithChildren
  '/login': typeof LoginRoute
  '/app': typeof LoggedInAppRouteWithChildren
  '/request-an-invite': typeof LoggedInRequestAnInviteRoute
  '/app/about': typeof LoggedInAppAboutRoute
  '/app/': typeof LoggedInAppIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof LoggedInRouteWithChildren
  '/login': typeof LoginRoute
  '/request-an-invite': typeof LoggedInRequestAnInviteRoute
  '/app/about': typeof LoggedInAppAboutRoute
  '/app': typeof LoggedInAppIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_logged-in': typeof LoggedInRouteWithChildren
  '/login': typeof LoginRoute
  '/_logged-in/app': typeof LoggedInAppRouteWithChildren
  '/_logged-in/request-an-invite': typeof LoggedInRequestAnInviteRoute
  '/_logged-in/app/about': typeof LoggedInAppAboutRoute
  '/_logged-in/app/': typeof LoggedInAppIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/login'
    | '/app'
    | '/request-an-invite'
    | '/app/about'
    | '/app/'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '' | '/login' | '/request-an-invite' | '/app/about' | '/app'
  id:
    | '__root__'
    | '/'
    | '/_logged-in'
    | '/login'
    | '/_logged-in/app'
    | '/_logged-in/request-an-invite'
    | '/_logged-in/app/about'
    | '/_logged-in/app/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LoggedInRoute: typeof LoggedInRouteWithChildren
  LoginRoute: typeof LoginRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LoggedInRoute: LoggedInRouteWithChildren,
  LoginRoute: LoginRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_logged-in",
        "/login"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_logged-in": {
      "filePath": "_logged-in.tsx",
      "children": [
        "/_logged-in/app",
        "/_logged-in/request-an-invite"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/_logged-in/app": {
      "filePath": "_logged-in/app.tsx",
      "parent": "/_logged-in",
      "children": [
        "/_logged-in/app/about",
        "/_logged-in/app/"
      ]
    },
    "/_logged-in/request-an-invite": {
      "filePath": "_logged-in/request-an-invite.tsx",
      "parent": "/_logged-in"
    },
    "/_logged-in/app/about": {
      "filePath": "_logged-in/app/about.tsx",
      "parent": "/_logged-in/app"
    },
    "/_logged-in/app/": {
      "filePath": "_logged-in/app/index.tsx",
      "parent": "/_logged-in/app"
    }
  }
}
ROUTE_MANIFEST_END */
